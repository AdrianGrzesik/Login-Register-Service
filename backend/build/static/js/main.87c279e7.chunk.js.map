{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","userName","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87c279e7.chunk.js","sourcesContent":["import {extendObservable} from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component{\r\n  render(){\r\n    return (\r\n      <div className=\"inputField\">\r\n\r\n        <input \r\n            className='input'\r\n            type={this.props.type}\r\n            placeholder={this.props.placeholder}\r\n            value={this.props.value}\r\n            onChange={(e)=> this.props.onChange(e.target.value)}\r\n            \r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component{\r\n  render(){\r\n    return (\r\n      <div className=\"submitButton\">\r\n        \r\n        <button\r\n            className='btn'\r\n            disabled={this.props.disabled}\r\n            onClick={ () => this.props.onClick()}\r\n        >\r\n            {this.props.text}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField'\r\nimport SubmitButton from './SubmitButton'\r\nimport UserStore from './stores/UserStore'\r\n\r\nclass LoginForm extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val){\r\n        val = val.trim();\r\n        if(val.length > 12){\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    async doLogin() {\r\n        if(!this.state.username){\r\n            return;\r\n        }\r\n        if(!this.state.password){\r\n            return;\r\n        }\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n        try{\r\n\r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            });\r\n\r\n            let result= await res.json();\r\n            if(result && result.success){\r\n                UserStore.isLoggedIn = true;\r\n                UserStore.username = result.username;\r\n            }else if(result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n\r\n        }catch(e){\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n    }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"loginForm\">\r\n        Log in:\r\n        <InputField\r\n            type='text'\r\n            placeholder='Username'\r\n            value={this.state.username? this.state.username : ''}\r\n            onChange= { (val) => this.setInputValue('username', val) }\r\n        />\r\n        <InputField\r\n            type='password'\r\n            placeholder='Password'\r\n            value={this.state.password? this.state.password : ''}\r\n            onChange= { (val) => this.setInputValue('password', val) }\r\n        />\r\n        <SubmitButton\r\n            text='Login'\r\n            disabled={this.state.buttonDisabled }\r\n            onClick={() => this.doLogin()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n\n\n  async componentDidMount() {\n\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.userName = result.userName;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.userName = '';\n\n      }\n\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n\n  render() {\n    console.log(this.result);\n    if (UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            Loading, please wait\n          </div>\n        </div>\n      );\n    } else {\n\n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"app\">\n            <div className='container'>\n              Welcome {UserStore.userName}\n\n              <SubmitButton\n                text={'Log out'}\n                disabled={false}\n                onClick={() => this.doLogout()}\n              />\n            </div>\n          </div>\n        );\n      }\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            <LoginForm />\n          </div>\n        </div>\n      );\n\n    }\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}